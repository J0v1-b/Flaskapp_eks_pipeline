pipeline {
    agent any
    environment {
        REGISTRY = "my-registry"
        IMAGE_NAME = "my-flask-app"
        IMAGE_TAG = "latest"
        KUBE_CONFIG = "k8s-config"
        NAMESPACE = "my-flask-app"
    }
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/my-flask-app.git'
            }
        }
        stage('Build') {
            steps {
                sh 'docker build -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG .'
            }
        }
        stage('Test') {
            steps {
                sh 'docker run --rm $REGISTRY/$IMAGE_NAME:$IMAGE_TAG pytest'
            }
        }
        stage('Push to Docker Repository') {
            steps {
                DOCKER_USER = credentials('DOCKER_HUB_USERNAME')
                DOCKER_PWD = credentials('DOCKER_HUB_PASSWORD')
                sh 'docker login --username $DOCKER_USER --password $DOCKER_PWD'
                sh 'docker push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG'
            }
        }
        stage('Deploy') {
            steps {
                withCredentials([kubeconfig(credentialsId: KUBE_CONFIG, context: 'k8s-cluster')]) {
                    sh 'kubectl --kubeconfig=kubeconfig apply -f deployment.yaml -n $NAMESPACE'
                    sh 'kubectl --kubeconfig=kubeconfig apply -f service.yaml -n $NAMESPACE'
                }
            }
        }
    }
}
                
